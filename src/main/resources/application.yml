spring:
  profiles:
    # 默认激活dev profile。当打包部署时，我们会通过其他方式覆盖它。
    active: dev

  application:
    name: crate-management
  
  # 数据库配置
  datasource:
    url: jdbc:postgresql://localhost:5432/crate_management_db?useSSL=false&characterEncoding=utf8&useUnicode=true
    username: postgres
    password: my!69.77o08891
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 5
      minimum-idle: 1
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
      auto-commit: false
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        # 连接池配置
        connection:
          provider_disables_autocommit: true
        # Envers审计配置
        envers:
          audit_table_suffix: _aud
          revision_field_name: rev
          revision_type_field_name: revtype
  
  # Security配置
  security:
    user:
      name: admin
      password: admin

  # Spring Boot文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true

# JWT配置
app:
  jwt:
    secret: ${JWT_SECRET:myVerySecretKeyThatIsAtLeast256BitsLongForHS256Algorithm}
    expiration-hours: ${JWT_EXPIRATION_HOURS:24}

  # 文件上传配置
  file-upload:
    image-base-path: ${FILE_UPLOAD_PATH:/home/ubuntu/app/server/images}
    goods-image-path: goods
    allowed-image-types: jpg,jpeg,png,gif,webp
    max-file-size: 10
    image-quality: 85
    thumbnail-size: 200

# 日志配置
logging:
  level:
    com.tk.cratemanagement: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# SpringDoc OpenAPI配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  show-actuator: true

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized